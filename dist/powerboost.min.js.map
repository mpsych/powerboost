{"mappings":"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","sources":["src/editor.js","src/index.js","src/powerboost.js","src/categories.js"],"sourcesContent":["export class Editor {\r\n    constructor(pane) {\r\n        this.pane = pane;\r\n        this.codeFolder = null;\r\n        this.codeState = {\r\n            value: 'Boostlet.init();\\nconsole.log(Boostlet.framework.name);',\r\n            output: ''\r\n        };\r\n    }\r\n\r\n    init() {\r\n        // Create Code Editor folder\r\n        this.codeFolder = this.pane.addFolder({\r\n            title: 'Code Editor',\r\n            expanded: true\r\n        });\r\n\r\n        // Add code input with v4 syntax\r\n        this.codeFolder.addBinding(this.codeState, 'value', {\r\n            label: 'Code',\r\n            view: 'textarea',\r\n            rows: 6,\r\n            placeholder: 'Enter your code here',\r\n        });\r\n\r\n        // Add run button\r\n        this.codeFolder.addButton({\r\n            title: 'Run Code'\r\n        }).on('click', () => this.runCode());\r\n\r\n        // Add output binding\r\n        this.codeFolder.addBinding(this.codeState, 'output', {\r\n            label: 'Output',\r\n            multiline: true,\r\n            rows: 6,\r\n            readonly: true\r\n        });\r\n    }\r\n\r\n    runCode() {\r\n        try {\r\n            // Capture console.log output\r\n            const originalLog = console.log;\r\n            let output = '';\r\n            console.log = (message) => {\r\n                output += message + '\\n';\r\n                originalLog(message);\r\n            };\r\n\r\n            // Run the code\r\n            eval(this.codeState.value);\r\n\r\n            // Update output and restore console.log\r\n            this.codeState.output = output;\r\n            console.log = originalLog;\r\n        } catch (e) {\r\n            this.codeState.output = e.toString();\r\n        }\r\n    }\r\n}","import { Powerboost } from './powerboost.js';\r\n\r\n\r\n\r\n// register global namespace\r\nwindow.Powerboost = new Powerboost();\r\n\r\n\r\n\r\n// Initialize immediately since Tweakpane is already loaded\r\nwindow.Powerboost.init().catch(error => {\r\n    console.error('Error initializing Powerboost:', error);\r\n});","import { Categories } from \"./categories.js\";\r\nimport { Editor } from \"./editor.js\";\r\n\r\nexport class Powerboost {\r\n  constructor() {\r\n      this.pane = null;\r\n      this.editor = null;\r\n      this.categories = null;\r\n  }\r\n\r\n  async init() {\r\n      try {\r\n          // Load Boostlet first\r\n          await this.loadBoostlet();\r\n\r\n          // Create main Tweakpane instance\r\n          this.pane = new Pane({\r\n              container: document.body,\r\n              title: 'PowerBoost',\r\n              expanded: true,\r\n          });\r\n\r\n          this.pane.registerPlugin(TextareaPlugin);\r\n\r\n          // Position the pane\r\n          const paneElement = this.pane.element;\r\n          paneElement.classList.add('powerboost-pane');\r\n          Object.assign(paneElement.style, {\r\n              position: 'fixed',\r\n              bottom: '10px',\r\n              right: '10px',\r\n              zIndex: '9999',\r\n          });\r\n\r\n          // Initialize Boostlet\r\n          Boostlet.init();\r\n\r\n          // Initialize components\r\n          this.categories = new Categories(this.pane);\r\n          await this.categories.init();\r\n\r\n          this.editor = new Editor(this.pane);\r\n          this.editor.init();\r\n\r\n      } catch (error) {\r\n          console.error('Error in Powerboost init:', error);\r\n          throw error;\r\n      }\r\n  }\r\n\r\n  loadBoostlet() {\r\n      return new Promise((resolve, reject) => {\r\n          const script = document.createElement('script');\r\n          script.src = 'https://mpsych.github.io/boostlet/dist/boostlet.min.js';\r\n          script.onload = resolve;\r\n          script.onerror = reject;\r\n          document.head.appendChild(script);\r\n      });\r\n  }\r\n}","export class Categories {\r\n    constructor(pane) {\r\n        this.pane = pane;\r\n        this.categories = [];\r\n        this.examples = new Map();\r\n        this.repoOwner = 'mpsych';\r\n        this.repoName = 'boostlet';\r\n        this.folderPath = 'examples';\r\n        this.apiUrl = `https://api.github.com/repos/${this.repoOwner}/${this.repoName}/contents/${this.folderPath}`;\r\n        \r\n        // State for category selection\r\n        this.state = {\r\n            selectedCategory: '',  // Empty default state\r\n            currentExamples: []\r\n        };\r\n    }\r\n\r\n    async init() {\r\n        const filesByCategory = await this.fetchBoostletFiles();\r\n        this.categories = Object.keys(filesByCategory);\r\n        this.examples = new Map(Object.entries(filesByCategory));\r\n        \r\n        this.createBoostletsUI();\r\n    }\r\n\r\n    createBoostletsUI() {\r\n        // Create main Boostlets folder\r\n        const boostletsFolder = this.pane.addFolder({\r\n            title: 'Boostlets',\r\n            expanded: true\r\n        });\r\n\r\n        // Add category dropdown with empty option\r\n        boostletsFolder.addBinding(this.state, 'selectedCategory', {\r\n            label: 'Category',\r\n            options: {\r\n                'Select a category': '',  // Empty default option\r\n                ...this.categories.reduce((acc, cat) => {\r\n                    acc[cat] = cat;\r\n                    return acc;\r\n                }, {})\r\n            }\r\n        }).on('change', (ev) => {\r\n            // Update examples when category changes\r\n            this.state.currentExamples = ev.value ? (this.examples.get(ev.value) || []) : [];\r\n            this.updateExampleButtons(boostletsFolder);\r\n        });\r\n\r\n        // Initial empty state - no buttons\r\n        this.updateExampleButtons(boostletsFolder);\r\n    }\r\n\r\n    updateExampleButtons(folder) {\r\n        // Remove existing example buttons if any\r\n        const existingButtons = folder.children.filter(child => \r\n            child.element.classList.contains('example-button')\r\n        );\r\n        existingButtons.forEach(button => folder.remove(button));\r\n\r\n        // Add new buttons for current examples\r\n        this.state.currentExamples.forEach(example => {\r\n            const btn = folder.addButton({\r\n                title: example,\r\n            }).on('click', () => {\r\n                this.loadExample(example);\r\n            });\r\n            \r\n            // Add class for identification without using label\r\n            btn.element.classList.add('example-button');\r\n        });\r\n    }\r\n\r\n    loadExample(exampleName) {\r\n        const baseUrl = 'https://boostlet.org/examples/';\r\n        const script = document.createElement('script');\r\n        script.src = `${baseUrl}${exampleName.replace(/\\s+/g, '').toLowerCase()}.js`;\r\n        document.head.appendChild(script);\r\n    }\r\n\r\n    async fetchBoostletFiles() {\r\n        try {\r\n            const response = await fetch(this.apiUrl);\r\n            const files = await response.json();\r\n            const filesByCategory = {};\r\n\r\n            await Promise.all(files.map(async (file) => {\r\n                if (file.type === \"file\" && file.name.endsWith(\".js\")) {\r\n                    const fileName = file.name;\r\n                    const fileNameEdit = fileName.substring(fileName.lastIndexOf('/') + 1, fileName.lastIndexOf('.'));\r\n                    const category = await this.getCategoryFromFile(file.download_url);\r\n                    if (!filesByCategory[category]) {\r\n                        filesByCategory[category] = [];\r\n                    }\r\n                    filesByCategory[category].push(fileNameEdit);\r\n                }\r\n            }));\r\n\r\n            return filesByCategory;\r\n        } catch (error) {\r\n            console.error('Error fetching files:', error);\r\n            return {};\r\n        }\r\n    }\r\n\r\n    async getCategoryFromFile(downloadUrl) {\r\n        try {\r\n            const response = await fetch(downloadUrl);\r\n            const scriptText = await response.text();\r\n            const categoryRegex = /CATEGORY\\s*=\\s*[\"']([^\"']+)[\"']/;\r\n            const match = categoryRegex.exec(scriptText);\r\n            return match ? match[1] : \"Others\";\r\n        } catch (error) {\r\n            console.error('Error fetching category:', error);\r\n            return \"Others\";\r\n        }\r\n    }\r\n}"],"names":[],"version":3,"file":"powerboost.min.js.map"}